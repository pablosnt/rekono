name: Desktop
on:
  release:
    types: [published]

jobs:
  docker-image:
    name: Docker Image
    runs-on: ubuntu-latest
    environment: docker-hub
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      
      - name: Install dependencies
        working-directory: src/frontend
        run: npm install .

      - name: Configure Rekono backend
        working-directory: src/frontend
        run: echo "VUE_APP_DESKTOP_BACKEND_URL=http://127.0.0.1:8000" > .env.production
      
      - name: Generate Desktop UI
        working-directory: src/frontend
        run: npm run electron:build
      
      - name: Build Docker image
        run: docker build --build-arg REKONO_VERSION=${{ github.event.release.name }} --file docker/debian/Dockerfile --tag ${{ secrets.DOCKER_USER }}/rekono:${{ github.event.release.name }} .

      - name: Publish Docker image in Docker Hub
        run: |
          docker tag ${{ secrets.DOCKER_USER }}/rekono:${{ github.event.release.name }} ${{ secrets.DOCKER_USER }}/rekono:latest
          docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_TOKEN }}
          docker push ${{ secrets.DOCKER_USER }}/rekono:${{ github.event.release.name }}
          docker push ${{ secrets.DOCKER_USER }}/rekono:latest
          docker logout

  debian-package:
    name: Debian Package
    runs-on: ubuntu-latest
    environment: gitlab
    needs: docker-image
    steps:
      - name: Checkout GitLab repository
        run: git clone https://gitlab.com/pablosnt/rekono.git rekono-deb
      
      - name: Update README.md
        working-directory: rekono-deb
        shell: python
        run: |
          import re
          with open('README.md', 'r') as readme:
            content = readme.read()
          line_to_replace = re.search(f'dpkg -i ../rekono_[\d\.]+_amd64.deb', content)
          if line_to_replace:
            with open('README.md', 'w') as readme:
              readme.write(content.replace(line_to_replace.group(0), 'dpkg -i ../rekono_${{ github.event.release.name }}_amd64.deb'))

      - name: Update rekono executable
        working-directory: rekono-deb
        run: |
          echo '#!/bin/sh' > rekono
          echo 'exec kaboxer run --component default --version ${{ github.event.release.name }} rekono -- "$@"' >> rekono

      - name: Update debian/changelog
        working-directory: rekono-deb/debian
        shell: python
        run: |
          import pytz
          from datetime import datetime
          with open('changelog', 'r') as changelog:
            old_changes = changelog.read()
          tz = pytz.timezone('Europe/Madrid')
          d = tz.localize(datetime.now())
          change_time = d.strftime('%a, %d %b %Y %H:%M:%S %z')
          new_changes = f'rekono (${{ github.event.release.name }}) UNRELEASED; urgency=medium\n\n  * Update Rekono version to ${{ github.event.release.name }}.\n\n -- Pablo Santiago LÃ³pez <${{ secrets.GITLAB_EMAIL }}>  {change_time}\n\n'
          with open('changelog', 'w') as changelog:
            changelog.write(new_changes + old_changes)
      
      - name: Commit changes to GitLab
        working-directory: rekono-deb
        run: |
          git config user.name 'Pablo Santiago'
          git config user.email '${{ secrets.GITLAB_EMAIL }}'
          git checkout -b release/${{ github.event.release.name }}
          git add .
          git commit -m "Update Rekono version to ${{ github.event.release.name }}"
          git config credential.helper '!f() { sleep 1; echo "username=${{ secrets.GITLAB_USER }}"; echo "password=${{ secrets.GITLAB_TOKEN }}"; }; f'
          git push --set-upstream origin release/${{ github.event.release.name }}
      
      - name: GitLab merge request
        shell: python
        env:
          GITLAB_PROJECT_ID: 45783845
        run: |
          import requests
          headers = {
            'PRIVATE-TOKEN': '${{ secrets.GITLAB_TOKEN }}'
          }
          data = {
            'title': 'Update Rekono version to ${{ github.event.release.name }}',
            'source_branch': 'release/${{ github.event.release.name }}',
            'target_branch': 'kali/master',
          }
          response = requests.post('https://gitlab.com/api/v4/projects/${{ env.GITLAB_PROJECT_ID }}/merge_requests', data=data, headers=headers)
          if response.status_code != 201:
            print(response.text)
          assert(response.status_code == 201)
